 #! /bin/sh

    ### BEGIN INIT INFO
    # Provides:          play
    # Required-Start:    $all
    # Required-Stop:     $all
    # Default-Start:     2 3 4 5
    # Default-Stop:      0 1 6
    # Short-Description:
    # Description:
    ### END INIT INFO

    # configurable variables
    APP_NAME="myplayapp"
    APP_DIR="/opt/myplayapp"
    CONF="application.conf"

    # private variables
    APP_SCRIPT="$APP_DIR/bin/$APP_NAME"
    PID_FILE="/var/run/$APP_NAME.pid"
    CONF_FILE="$APP_DIR/conf/$CONF"
    CONSOLE_LOG="$APP_DIR/logs/console.log"
	
    start() {
        bash $APP_SCRIPT -Dpidfile.path=$PID_FILE -Dconfig.file=$CONF_FILE  > $CONSOLE_LOG &
    }
    start_with_evolutions() {
        bash $APP_SCRIPT -Dpidfile.path=$PID_FILE -Dconfig.file=$CONF_FILE  -DapplyEvolutions.default=true  -DapplyDownEvolutions.default=true > $CONSOLE_LOG &
    }

    stop() {
        kill `cat $PID_FILE`
    }

    case "$1" in
      start)
        echo "Starting $APP_NAME"
	if [ -e "$PID_FILE" ] ; then
                echo "$APP_NAME already running"
                echo "Try restart option or delete pid file at $PID_FILE"
        else
                start
		echo "$APP_NAME started"
        fi
        ;;
      start_evolution)
        echo "Starting $APP_NAME"
        if [ -e "$PID_FILE" ] ; then
                echo "$APP_NAME already running"
                echo "Try restart option or delete pid file at $PID_FILE"
        else
                start_with_evolutions
                echo "$APP_NAME started"
        fi
        ;;
 
      stop)
        echo "Stopping $APP_NAME"
        stop
        echo "$APP_NAME stopped."
        ;;
      restart)
        echo  "Restarting $APP_NAME"
        stop
        sleep 2
        start
        echo "$APP_NAME restarted."
        ;;
      status)
        if [ -e "$PID_FILE" ] ; then
                echo "$APP_NAME is running (pid `cat $PID_FILE`)"
        else
                echo "$APP_NAME is not running"
        fi
 	;;
      *)
        N="/etc/init.d/$APP_NAME"
        echo "Usage: $N {start|stop|restart|status|start_evolution}" >&2
        exit 1
        ;;
    esac

    exit 0
